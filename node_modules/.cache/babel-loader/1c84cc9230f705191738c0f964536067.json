{"ast":null,"code":"import _defineProperty from \"/project/k9085-react-practise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _objectSpread from \"/project/k9085-react-practise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/project/k9085-react-practise/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/project/k9085-react-practise/src/FormValidation.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\"; //form Validation example without inbuilt libraries\n//comments\n\n/* <pre>{JSON.stringify(formValues, undefined, 2)}</pre>  it stringify \r\n the formvalues and shows in browser whatever values you type in input fields */\n\n/*e.preventDefault(); //it handles the page not to refresh */\n\n/* setFormErrors(validate(formValues)); \r\npassing formvalues to validate function and the outcome of this validate function\r\nwill be the value to the setFormErrors .the setFormErrors will update the formerrors\r\n*/\n//<p>{formErrors.username}</p> this syntax is used to display the error message near the label\n\n/*  signin successful or not logic\r\n {Object.keys(formErrors).length === 0 && isSubmit ? (\r\n        <div className=\"ui message success\">Signed in successfully</div>\r\n      ) : (\r\n        <pre>{JSON.stringify(formValues, undefined, 2)}</pre>\r\n      )}\r\n\r\n*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nFormValidation = _s(function () {\n  _s();\n\n  var initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n\n  var _useState = useState(initialValues),\n      _useState2 = _slicedToArray(_useState, 2),\n      formValues = _useState2[0],\n      setFormValues = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      formErrors = _useState4[0],\n      setFormErrors = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSubmit = _useState6[0],\n      setIsSubmit = _useState6[1];\n\n  var handleChange = function handleChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setFormValues(_objectSpread(_objectSpread({}, formValues), {}, _defineProperty({}, name, value)));\n  };\n\n  var handleSubmit = function handleSubmit(e) {\n    e.preventDefault(); //it handles the page not to refresh\n\n    setFormErrors(validate(formValues));\n    setIsSubmit(true); // onclick of submit button we are making this is true\n  };\n  /*As soon as the form fields satisfied with the validation need to submit the form so that \r\n  we are using useEfffect and it will get change based on the formErrors */\n\n\n  useEffect(function () {\n    console.log(formErrors);\n    /* chcking formErrors keys length and issubmit value true */\n\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\n      console.log(formValues); // these values will be correct form values with proper validation\n    }\n  }, [formErrors]);\n\n  var validate = function validate(values) {\n    var errors = {}; // this error object contains the errors and it will be set into the formerrors\n\n    var regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\n\n    if (!values.username) {\n      errors.username = \"Username is required!\";\n    }\n\n    if (!values.email) {\n      errors.email = \"Email is required!\";\n    } else if (!regex.test(values.email)) {\n      errors.email = \"This is not a valid email format!\";\n    }\n\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (values.password.length < 4) {\n      errors.password = \"Password must be more than 4 characters\";\n    } else if (values.password.length > 10) {\n      errors.password = \"Password cannot exceed more than 10 characters\";\n    }\n\n    return errors;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [Object.keys(formErrors).length === 0 && isSubmit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui message success\",\n      children: \"Signed in successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, _this) : /*#__PURE__*/_jsxDEV(\"pre\", {\n      children: JSON.stringify(formValues)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ui form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            placeholder: \"Username\",\n            value: formValues.username,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"email\",\n            placeholder: \"Email\",\n            value: formValues.email,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"field\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            placeholder: \"Password\",\n            value: formValues.password,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formErrors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"fluid ui button blue\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, _this);\n}, \"+RVuQagXWuMGIFoIbfIwlZ6DgN0=\");\nexport default FormValidation;","map":{"version":3,"names":["React","useState","useEffect","FormValidation","initialValues","username","email","password","formValues","setFormValues","formErrors","setFormErrors","isSubmit","setIsSubmit","handleChange","e","target","name","value","handleSubmit","preventDefault","validate","console","log","Object","keys","length","values","errors","regex","test","JSON","stringify"],"sources":["/project/k9085-react-practise/src/FormValidation.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n//form Validation example without inbuilt libraries\r\n//comments\r\n/* <pre>{JSON.stringify(formValues, undefined, 2)}</pre>  it stringify \r\n the formvalues and shows in browser whatever values you type in input fields */\r\n/*e.preventDefault(); //it handles the page not to refresh */\r\n/* setFormErrors(validate(formValues)); \r\npassing formvalues to validate function and the outcome of this validate function\r\nwill be the value to the setFormErrors .the setFormErrors will update the formerrors\r\n*/\r\n//<p>{formErrors.username}</p> this syntax is used to display the error message near the label\r\n\r\n/*  signin successful or not logic\r\n {Object.keys(formErrors).length === 0 && isSubmit ? (\r\n        <div className=\"ui message success\">Signed in successfully</div>\r\n      ) : (\r\n        <pre>{JSON.stringify(formValues, undefined, 2)}</pre>\r\n      )}\r\n\r\n*/\r\n\r\n FormValidation = ()=> {\r\n  const initialValues = { username: \"\", email: \"\", password: \"\" };\r\n  const [formValues, setFormValues] = useState(initialValues);\r\n  const [formErrors, setFormErrors] = useState({});\r\n  const [isSubmit, setIsSubmit] = useState(false);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormValues({ ...formValues, [name]: value });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault(); //it handles the page not to refresh\r\n    setFormErrors(validate(formValues));\r\n    setIsSubmit(true); // onclick of submit button we are making this is true\r\n  };\r\n\r\n  /*As soon as the form fields satisfied with the validation need to submit the form so that \r\n  we are using useEfffect and it will get change based on the formErrors */\r\n  useEffect(() => {\r\n    console.log(formErrors);\r\n    /* chcking formErrors keys length and issubmit value true */\r\n    if (Object.keys(formErrors).length === 0 && isSubmit) {\r\n      console.log(formValues); // these values will be correct form values with proper validation\r\n    }\r\n  }, [formErrors]);\r\n\r\n  const validate = (values) => {\r\n    const errors = {}; // this error object contains the errors and it will be set into the formerrors\r\n    const regex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]{2,}$/i;\r\n    if (!values.username) {\r\n      errors.username = \"Username is required!\";\r\n    }\r\n    if (!values.email) {\r\n      errors.email = \"Email is required!\";\r\n    } else if (!regex.test(values.email)) {\r\n      errors.email = \"This is not a valid email format!\";\r\n    }\r\n    if (!values.password) {\r\n      errors.password = \"Password is required\";\r\n    } else if (values.password.length < 4) {\r\n      errors.password = \"Password must be more than 4 characters\";\r\n    } else if (values.password.length > 10) {\r\n      errors.password = \"Password cannot exceed more than 10 characters\";\r\n    }\r\n    return errors;\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {Object.keys(formErrors).length === 0 && isSubmit ? (\r\n        <div className=\"ui message success\">Signed in successfully</div>\r\n      ) : (\r\n        <pre>{JSON.stringify(formValues)}</pre>\r\n      )}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <h1>Login Form</h1>\r\n        <div className=\"ui divider\"></div>\r\n        <div className=\"ui form\">\r\n          <div className=\"field\">\r\n            <label>Username</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              placeholder=\"Username\"\r\n              value={formValues.username}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <p>{formErrors.username}</p>\r\n          <div className=\"field\">\r\n            <label>Email</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={formValues.email}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <p>{formErrors.email}</p>\r\n          <div className=\"field\">\r\n            <label>Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={formValues.password}\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <p>{formErrors.password}</p>\r\n          <button className=\"fluid ui button blue\">Submit</button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FormValidation;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}